export var ScrcpyVideoCodecId;
(function (ScrcpyVideoCodecId) {
    ScrcpyVideoCodecId[ScrcpyVideoCodecId["H264"] = 1748121140] = "H264";
    ScrcpyVideoCodecId[ScrcpyVideoCodecId["H265"] = 1748121141] = "H265";
    ScrcpyVideoCodecId[ScrcpyVideoCodecId["AV1"] = 6387249] = "AV1";
})(ScrcpyVideoCodecId || (ScrcpyVideoCodecId = {}));
export class ScrcpyAudioCodec {
    static OPUS = new ScrcpyAudioCodec("opus", 0x6f_70_75_73, "audio/opus", "opus");
    static AAC = new ScrcpyAudioCodec("aac", 0x00_61_61_63, "audio/aac", "mp4a.66");
    static RAW = new ScrcpyAudioCodec("raw", 0x00_72_61_77, "audio/raw", "");
    optionValue;
    metadataValue;
    mimeType;
    webCodecId;
    constructor(optionValue, metadataValue, mimeType, webCodecId) {
        this.optionValue = optionValue;
        this.metadataValue = metadataValue;
        this.mimeType = mimeType;
        this.webCodecId = webCodecId;
    }
    toOptionValue() {
        return this.optionValue;
    }
}
//# sourceMappingURL=codec.js.map