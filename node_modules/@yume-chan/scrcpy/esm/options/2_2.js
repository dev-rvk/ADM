import { ScrcpyOptions1_21 } from "./1_21.js";
import { ScrcpyOptions2_1 } from "./2_1.js";
import { ScrcpyOptionsBase } from "./types.js";
export class ScrcpyOptions2_2 extends ScrcpyOptionsBase {
    static DEFAULTS = {
        ...ScrcpyOptions2_1.DEFAULTS,
        videoSource: "display",
        displayId: 0,
        cameraId: undefined,
        cameraSize: undefined,
        cameraFacing: undefined,
        cameraAr: undefined,
        cameraFps: undefined,
        cameraHighSpeed: false,
        listCameras: false,
        listCameraSizes: false,
    };
    get defaults() {
        return ScrcpyOptions2_2.DEFAULTS;
    }
    constructor(init) {
        super(new ScrcpyOptions2_1(init), {
            ...ScrcpyOptions2_2.DEFAULTS,
            ...init,
        });
    }
    parseDisplay(line) {
        const match = line.match(/^\s+--display-id=(\d+)\s+\(([^)]+)\)$/);
        if (match) {
            const display = {
                id: Number.parseInt(match[1], 10),
            };
            if (match[2] !== "size unknown") {
                display.resolution = match[2];
            }
            return display;
        }
        return undefined;
    }
    serialize() {
        return ScrcpyOptions1_21.serialize(this.value, this.defaults);
    }
}
//# sourceMappingURL=2_2.js.map