import type { Adb } from "@yume-chan/adb";
import type { ScrcpyDisplay, ScrcpyEncoder, ScrcpyOptions } from "@yume-chan/scrcpy";
import { ScrcpyOptionsBase } from "@yume-chan/scrcpy";
import type { AdbScrcpyConnection } from "../connection.js";
export interface AdbScrcpyOptions<T extends object> extends ScrcpyOptions<T> {
    /**
     * Allows the client to forcefully enable forward tunnel mode
     * when reverse tunnel fails.
     */
    tunnelForwardOverride: boolean;
    getEncoders(adb: Adb, path: string, version: string): Promise<ScrcpyEncoder[]>;
    getDisplays(adb: Adb, path: string, version: string): Promise<ScrcpyDisplay[]>;
    createConnection(adb: Adb): AdbScrcpyConnection;
}
export declare abstract class AdbScrcpyOptionsBase<T extends object> extends ScrcpyOptionsBase<T, ScrcpyOptions<T>> implements AdbScrcpyOptions<T> {
    get defaults(): Required<T>;
    tunnelForwardOverride: boolean;
    constructor(base: ScrcpyOptions<T>);
    serialize(): string[];
    abstract getEncoders(adb: Adb, path: string, version: string): Promise<ScrcpyEncoder[]>;
    abstract getDisplays(adb: Adb, path: string, version: string): Promise<ScrcpyDisplay[]>;
    abstract createConnection(adb: Adb): AdbScrcpyConnection;
}
//# sourceMappingURL=types.d.ts.map