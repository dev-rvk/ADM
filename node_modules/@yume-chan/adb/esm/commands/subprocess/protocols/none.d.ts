import type { Consumable, WritableStream } from "@yume-chan/stream-extra";
import { ReadableStream } from "@yume-chan/stream-extra";
import type { Adb, AdbSocket } from "../../../adb.js";
import type { AdbSubprocessProtocol } from "./types.js";
/**
 * The legacy shell
 *
 * Features:
 * * `stderr`: No
 * * `exit` exit code: No
 * * `resize`: No
 */
export declare class AdbSubprocessNoneProtocol implements AdbSubprocessProtocol {
    #private;
    static isSupported(): boolean;
    static pty(adb: Adb, command: string): Promise<AdbSubprocessNoneProtocol>;
    static raw(adb: Adb, command: string): Promise<AdbSubprocessNoneProtocol>;
    get stdin(): WritableStream<Consumable<Uint8Array>>;
    /**
     * Legacy shell mixes stdout and stderr.
     */
    get stdout(): ReadableStream<Uint8Array>;
    /**
     * `stderr` will always be empty.
     */
    get stderr(): ReadableStream<Uint8Array>;
    get exit(): Promise<number>;
    constructor(socket: AdbSocket);
    resize(): void;
    kill(): Promise<void>;
}
//# sourceMappingURL=none.d.ts.map