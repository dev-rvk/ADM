import type { AsyncExactReadable, StructLike, StructValueType } from "@yume-chan/struct";
import Struct from "@yume-chan/struct";
export declare enum AdbSyncResponseId {
    Entry = "DENT",
    Entry2 = "DNT2",
    Lstat = "STAT",
    Stat = "STA2",
    Lstat2 = "LST2",
    Done = "DONE",
    Data = "DATA",
    Ok = "OKAY",
    Fail = "FAIL"
}
export declare class AdbSyncError extends Error {
}
export declare const AdbSyncFailResponse: Struct<{
    messageLength: number;
    message: string;
}, "messageLength", Record<never, never>, never>;
export declare function adbSyncReadResponse<T>(stream: AsyncExactReadable, id: AdbSyncResponseId, type: StructLike<T>): Promise<T>;
export declare function adbSyncReadResponses<T extends Struct<object, PropertyKey, object, unknown>>(stream: AsyncExactReadable, id: AdbSyncResponseId, type: T): AsyncGenerator<StructValueType<T>, void, void>;
//# sourceMappingURL=response.d.ts.map